<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- Spingboot -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>tads_produtos_springboot_exemplo</artifactId>
    <version>2.0.0</version>
    <name>produtos</name>
    <description>TADS: Projeto de Exemplo API REST com Spring Boot</description>
    <properties>
        <java.version>17</java.version>
    </properties>
    <dependencies>
        <!-- Para o Desenvolvimento e a Produção -->

        <!-- Para os Controllers do app-->
        <!-- https://docs.spring.io/spring-boot/docs/current/reference/html/web.html -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- Para o Desenvolvimento (ferramentas para o dev) -->
        <!-- https://docs.spring.io/spring-boot/docs/current/reference/html/using.html#using.devtools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- Para o JPA do app -->
        <!-- https://docs.spring.io/spring-boot/docs/current/reference/html/data.html#data.sql.jpa-and-spring-data -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- Para o data source no perfil Desenvolvimento (conector do banco de dados) -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>3.0.4</version>
        </dependency>
        <!-- Para o data source no perfil Produção (conector do banco de dados) -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>8.2.0</version>
        </dependency>

        <!-- Para adicionar segurança no app -->
        <!-- Spring Security é uma estrutura que fornece autenticação, autorização e proteção contra ataques comuns
            https://docs.spring.io/spring-boot/docs/current/reference/html/web.html#web.security -->
        <!-- Configuração starter do Spring Security (o que vem configuradao por padrão)
            https://docs.spring.io/spring-security/reference/servlet/getting-started.html#servlet-hello-auto-configuration
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- Para o JWT -->
        <!-- https://oauth.net/2/ -->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>4.4.0</version>
        </dependency>

        <!-- Para a Validação da integridade dos dados do app -->
        <!-- https://docs.spring.io/spring-framework/docs/4.1.x/spring-framework-reference/html/validation.html -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Para Testes do app-->
        <!--
            O que vem em no spring-boot-starter-test?
            Spring Boot Test: utilitários de teste orientados ao Spring Boot
            JSONPath: a linguagem de consulta para documentos JSON
            AssertJ: API fluente para declaração de resultados
            Hamcrest: Biblioteca de matchers (para uso de Regex)
            JUnit 5: Biblioteca fundamental para escrever casos de teste
            Mockito: estrutura de simulação para construção de casos de teste
            JSONassert: Biblioteca de assertivas voltadas para documentos JSON
            Spring Test: utilitários de teste do Spring Framework
            XMLUnit: Kit de ferramentas para verificação de documentos XML
        -->
        <!-- Essa dependência é adicionada automaticamente ao criar o projeto -->
        <!-- https://docs.spring.io/spring-security/reference/getting-spring-security.html -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Para os testes (essa dependência deve ser adicionada ao incluir a dependência de segurança no app) -->
        <!-- https://docs.spring.io/spring-security/reference/servlet/test/index.html -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- H2 (É um banco de dados relacional em memória, muito utilizado por Testers -->
        <!-- Eu deixei aqui como opção para você conhecer e experimentar -->
        <!-- https://www.h2database.com/html/main.html -->
<!--        <dependency>-->
<!--            <groupId>com.h2database</groupId>-->
<!--            <artifactId>h2</artifactId>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->

        <!-- Para a Documentação do app -->
        <!-- https://springdoc.org/ -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.0.2</version>
        </dependency>

        <!-- Serviço de Email do Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- Para acessar o serviço de Storage do app-->
        <!-- Firebase Admin -->
        <!-- https://firebase.google.com/docs/admin/setup?hl=pt-br -->
        <dependency>
            <groupId>com.google.firebase</groupId>
            <artifactId>firebase-admin</artifactId>
            <version>9.2.0</version>
        </dependency>

        <!-- Útil -  Para o Desenvolvimento do app-->
        <!-- Lombok (para os Boilerplates das classes de modelo, getters, setters, etc) -->
        <!-- https://projectlombok.org/features/ -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- ModelMapper (para o mapeamento do tipo de Domínio (model) em DTO, e vice-versa) -->
        <!-- http://modelmapper.org/ -->
        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>2.3.0</version>
        </dependency>

    </dependencies>

    <!-- Firebase Admin (para localizar a dependência do Firebase Admin na Web) -->
    <repositories>
        <repository>
            <id>spring-repo</id>
            <url>https://maven.google.com/</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!-- Para automatizar o processo de implantação do app (via plugin do Maven) -->
            <!-- https://devcenter.heroku.com/articles/deploying-java-applications-with-the-heroku-maven-plugin -->
            <plugin>
                <groupId>com.heroku.sdk</groupId>
                <artifactId>heroku-maven-plugin</artifactId>
                <version>3.0.7</version>
                <configuration>
                    <buildpacks>
                        <buildpack>heroku/jvm</buildpack>
                    </buildpacks>
                    <appName>tads-sb-vendas-base-prod</appName>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
