#Configure o active profile em Run/Debug Configuration
# 1. -Dspring.profiles.active=dev , colocando esse parametro no campo VM Options;
# 2. Ou simplesmente adicione o profile no campo Active Profiles.

# Datasource Configuration
#localhost
spring.datasource.url=jdbc:mariadb://localhost:3306/tads_produtos_springboot_exemplo?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=mariadb
#MARIADB_SECRET é uma variável de ambiente (ou utiliza o valor depois dos dois pontos)
spring.datasource.password=${MARIADB_SECRET:mariadb}

#JPA
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
# Hibernate ddl auto (create, create-drop, update, none): with "update" the database
# schema will be automatically updated accordingly to java entities found in the project
spring.jpa.hibernate.ddl-auto=update
# JPA-SQL (as propriedades abaixo instruem o Spring Boot a imprimir o SQL e formatá-lo)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#Para remover o warning da devtools
spring.jpa.open-in-view=false

#Porta do servidor (é possível escolher a porta através dessa configuração)
server.port=8080

# A moral é que o Spring Boot inicializa no modo Starter (pré-configurado). Então, se você precisar alterar o que está
# pré-configurado (default), basta você adicionar a propriedade nesse arquivo para sobreescrever o padrão do Spring Boot.
# Também é possível alterar a configuração default por linha de código, adicionando seus próprios beans ao projeto.
